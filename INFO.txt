 1. If the user choose to user ext2_restore_bonus.c, then we assume the user will always include a "-r" flag. If the user includes the "-r" flag but accidently passes the path of a file or a symbolic link as the command line argument, the program will just act like ext2_restore. However, if the user decided to restore something that is not a directory at the beginning, he should better choose ext2_restore. For this reason, using ext2_restore_bonus without including the "-r" flag will result in an error and corresponding usage instructions.

2. And we apply two starategies while dealing with dir_entry in the design of mkdir and restore.  As described in the handout, we should always add new entry to the end of the last entry(i.e. we never overwrite the gap). In case5-mkdir-2.img 's solution, while adding a new entry to the data block , we ignores the gap of the last entry. By using gdb, "bfile" is the last entry but there is another entry called "bfile~" which might be a previously deleted file. In the solution, the rec-len of "bfile" is 16 which means that the new entry block overwrites the entry of "bfile~".  If we follows the idea of never overwriting gaps, the rec len of "bfile" should be 32 in this case. 
   In order to pass the auto -test, we ignores the gap of the last entry of a data block while doing mkdir.   
